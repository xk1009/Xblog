"use strict";(self.webpackChunkx_blog=self.webpackChunkx_blog||[]).push([[623],{693:(e,a,i)=>{i.r(a),i.d(a,{comp:()=>v,data:()=>g});var s=i(641);const t=i.p+"assets/img/vue3_1.35672654.jpg",n=i.p+"assets/img/vue3_2.48fc84f8.jpg",r=i.p+"assets/img/vue3_3.23a3ec52.jpg",l=i.p+"assets/img/vue3_4.6339ddf8.jpg",h=i.p+"assets/img/vue3_5.61cdd0d0.jpg",p=i.p+"assets/img/vue3_6.f28e5c07.jpg",d=i.p+"assets/img/vue3_7.21c5681c.jpg",c=i.p+"assets/img/vue3_8.e5db7198.jpg",o={},v=(0,i(6262).A)(o,[["render",function(e,a){return(0,s.uX)(),(0,s.CE)("div",null,a[0]||(a[0]=[(0,s.Fv)('<h2 id="传统方式-直接引用" tabindex="-1"><a class="header-anchor" href="#传统方式-直接引用"><span>传统方式 直接引用</span></a></h2><div class="language-javascrpt line-numbers-mode" data-highlighter="shiki" data-ext="javascrpt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-javascrpt"><span class="line"><span>vue.global.js</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="模块化开发-需要用到" tabindex="-1"><a class="header-anchor" href="#模块化开发-需要用到"><span>模块化开发 需要用到</span></a></h2><p><img src="'+t+'" alt="模块化" loading="lazy"><br> 模块化是不能使用浏览器直接打开的 需要vscode 安装live server扩展</p><h2 id="ref-和reactive的区别" tabindex="-1"><a class="header-anchor" href="#ref-和reactive的区别"><span>ref 和reactive的区别</span></a></h2><ul><li>ref用于存储数字和字符串</li><li>reactive用于存储比较复杂的对象</li></ul><h2 id="v-on" tabindex="-1"><a class="header-anchor" href="#v-on"><span>v-on</span></a></h2><p>事件绑定 简化写法 用@代替<br> 按键修饰符 @keyup.enter 按下回车间 松开时触发 keydown按下触发</p><h2 id="v-show" tabindex="-1"><a class="header-anchor" href="#v-show"><span>v-show</span></a></h2><p>显示与隐藏 boolean值 原理是通过修改css的style样式实现的 display:none</p><h2 id="v-if" tabindex="-1"><a class="header-anchor" href="#v-if"><span>v-if</span></a></h2><p>v-if 显示与隐藏 boolean值 原理是是否渲染的方式 经常切换的话不建议使用 因为会平繁的这dom中添加或移除元素导致性能下降；<br> 结合v-else-if 和 v-else 使用 可以根据值动态渲染需要显示的元素</p><h2 id="v-bind" tabindex="-1"><a class="header-anchor" href="#v-bind"><span>v-bind</span></a></h2><p>与数据绑定 简写方式：</p><h2 id="v-model" tabindex="-1"><a class="header-anchor" href="#v-model"><span>v-model</span></a></h2><ul><li>双向绑定，例如用户手动修改值，绑定变量也随之改变，与bind有区别，默认实时渲染。</li><li>修饰符 v-model.lazy,不会立即渲染只有在失去焦点或者按下回车才渲染，v-model.trim去掉收尾的空格。</li></ul><h2 id="v-text" tabindex="-1"><a class="header-anchor" href="#v-text"><span>v-text</span></a></h2><p>将文字进行绑定</p><h2 id="v-html" tabindex="-1"><a class="header-anchor" href="#v-html"><span>v-html</span></a></h2><p>会解析html格式，可以添加样式等</p><h2 id="watch" tabindex="-1"><a class="header-anchor" href="#watch"><span>watch</span></a></h2><p>监听值变化 新值和旧值变化 使用watch需要导入<br><img src="'+n+'" alt="watch" loading="lazy"></p><h2 id="watcheffect" tabindex="-1"><a class="header-anchor" href="#watcheffect"><span>watchEffect</span></a></h2><p>隐藏式 监听 使用watch需要导入<br><img src="'+r+'" alt="watchEffect" loading="lazy"></p><h2 id="computed" tabindex="-1"><a class="header-anchor" href="#computed"><span>computed</span></a></h2><p>计算属性 使用计算属性需要导入<br><img src="'+l+'" alt="computed" loading="lazy"></p><h2 id="创建vue项目基本步骤" tabindex="-1"><a class="header-anchor" href="#创建vue项目基本步骤"><span>创建vue项目基本步骤</span></a></h2><p>创建vue项目<br> 使用vite快速创建<br> 在工作空间文件夹使用cmd命令<br> 执行 npm create vite@latest<br> 删除一些没用的文件</p><h2 id="vscode-插件" tabindex="-1"><a class="header-anchor" href="#vscode-插件"><span>vscode 插件</span></a></h2><figure><img src="'+h+'" alt="插件" tabindex="0" loading="lazy"><figcaption>插件</figcaption></figure><h2 id="组件导入与数据传递" tabindex="-1"><a class="header-anchor" href="#组件导入与数据传递"><span>组件导入与数据传递</span></a></h2><ul><li>组件导入使用import 导入名首字母大写，使用方式直接在template中使用首字母大写标签</li><li>组件数据传递使用defineProps接收父组件传递的值，使用defineEmits向父组件传递事件</li><li>provide 可以将数据传递给所有子组件类似于map k-v方式，跨辈分传递，使用时需要导入，子组件接收需要导入inject接收数据</li></ul><h2 id="生命周期函数" tabindex="-1"><a class="header-anchor" href="#生命周期函数"><span>生命周期函数</span></a></h2><p><img src="'+p+'" alt="生命周期函数" loading="lazy"><br><img src="'+d+'" alt="错误处理" loading="lazy"></p><h2 id="路由router" tabindex="-1"><a class="header-anchor" href="#路由router"><span>路由router</span></a></h2><p>安装 npm install vue-router@4</p><ol><li>创建router文件夹 存放路由规则</li><li>创建一个js文件，创建路由规则，创建路由器，并导出</li><li>在main.js文件中 导入路由器，并使用use与vue绑定</li><li>在app.vue中 template标签中添加 router-view标签</li></ol><h2 id="插件安装" tabindex="-1"><a class="header-anchor" href="#插件安装"><span>插件安装</span></a></h2><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">element-plus</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> element-plus</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --save</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用vuepress-构建个人blog" tabindex="-1"><a class="header-anchor" href="#使用vuepress-构建个人blog"><span>使用vuepress 构建个人blog</span></a></h2><figure><img src="'+c+'" alt="vuepress" tabindex="0" loading="lazy"><figcaption>vuepress</figcaption></figure>',41)]))}]]),g=JSON.parse('{"path":"/frontEnd/frontEnd/vue3.html","title":"vue3","lang":"zh-CN","frontmatter":{"icon":"v","category":["frontEnd","vue"],"tag":["frontEnd","vue","vue3","笔记","记录"],"title":"vue3","star":true,"pageview":true,"description":"传统方式 直接引用 模块化开发 需要用到 模块化 模块化是不能使用浏览器直接打开的 需要vscode 安装live server扩展 ref 和reactive的区别 ref用于存储数字和字符串 reactive用于存储比较复杂的对象 v-on 事件绑定 简化写法 用@代替 按键修饰符 @keyup.enter 按下回车间 松开时触发 keydown按...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue3\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-14T07:00:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XK\\",\\"url\\":\\"https://xk1009.github.io/Xblog\\",\\"email\\":\\"564293991@qq.com\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/Xblog/frontEnd/frontEnd/vue3.html"}],["meta",{"property":"og:site_name","content":"树下打盹儿"}],["meta",{"property":"og:title","content":"vue3"}],["meta",{"property":"og:description","content":"传统方式 直接引用 模块化开发 需要用到 模块化 模块化是不能使用浏览器直接打开的 需要vscode 安装live server扩展 ref 和reactive的区别 ref用于存储数字和字符串 reactive用于存储比较复杂的对象 v-on 事件绑定 简化写法 用@代替 按键修饰符 @keyup.enter 按下回车间 松开时触发 keydown按..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-14T07:00:52.000Z"}],["meta",{"property":"article:tag","content":"记录"}],["meta",{"property":"article:tag","content":"笔记"}],["meta",{"property":"article:tag","content":"vue3"}],["meta",{"property":"article:tag","content":"vue"}],["meta",{"property":"article:tag","content":"frontEnd"}],["meta",{"property":"article:modified_time","content":"2025-07-14T07:00:52.000Z"}]]},"git":{"createdTime":1750339044000,"updatedTime":1752476452000,"contributors":[{"name":"xk","username":"xk","email":"564293991@qq.com","commits":3,"url":"https://github.com/xk"}]},"readingTime":{"minutes":2.29,"words":687},"filePathRelative":"frontEnd/frontEnd/vue3.md","excerpt":"<h2>传统方式 直接引用</h2>\\n<div class=\\"language-javascrpt line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"javascrpt\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-javascrpt\\"><span class=\\"line\\"><span>vue.global.js</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}')},6262:(e,a)=>{a.A=(e,a)=>{const i=e.__vccOpts||e;for(const[e,s]of a)i[e]=s;return i}}}]);