"use strict";(self.webpackChunkx_blog=self.webpackChunkx_blog||[]).push([[4692],{6262:(e,t)=>{t.A=(e,t)=>{const r=e.__vccOpts||e;for(const[e,i]of t)r[e]=i;return r}},9355:(e,t,r)=>{r.r(t),r.d(t,{comp:()=>a,data:()=>n});var i=r(641);const l={},a=(0,r(6262).A)(l,[["render",function(e,t){return(0,i.uX)(),(0,i.CE)("div",null,t[0]||(t[0]=[(0,i.Fv)('<h2 id="springmvc执行流程" tabindex="-1"><a class="header-anchor" href="#springmvc执行流程"><span>springMVC执行流程</span></a></h2><ol><li>用户发送请求至前端控制器DispatcherServlet。</li><li>DispatcherServlet收到请求调用HandlerMapping处理器映射器。</li><li>处理器映射器找到具体的处理器(可以根据xml配置、注解进行查找)，生成处理器对象及处理器拦截器(如果有则生成)一并返回给DispatcherServlet。</li><li>DispatcherServlet调用HandlerAdapter处理器适配器。</li><li>HandlerAdapter经过适配调用具体的处理器(Controller，也叫后端控制器)。</li><li>Controller执行完成返回ModelAndView。</li><li>HandlerAdapter将controller执行结果ModelAndView返回给DispatcherServlet。</li><li>DispatcherServlet将ModelAndView传给ViewReslover视图解析器。</li><li>ViewReslover解析后返回具体View.</li><li>DispatcherServlet根据View进行渲染视图（即将模型数据填充至视图中）。</li><li>DispatcherServlet响应用户。</li></ol><h2 id="注解" tabindex="-1"><a class="header-anchor" href="#注解"><span>注解</span></a></h2><ul><li>@RequestBody 用来接收参数只能用在POST请求中接受json字符串数据</li><li>@RequestParam 可以接受post和get请求数据</li></ul>',4)]))}]]),n=JSON.parse('{"path":"/programming/framework/springMVC.html","title":"springMVC","lang":"zh-CN","frontmatter":{"icon":"tree","category":["java","foundation","基础","springMVC"],"tag":["java","foundation","笔记","记录","基础","spring"],"title":"springMVC","star":true,"pageview":true,"description":"springMVC执行流程 用户发送请求至前端控制器DispatcherServlet。 DispatcherServlet收到请求调用HandlerMapping处理器映射器。 处理器映射器找到具体的处理器(可以根据xml配置、注解进行查找)，生成处理器对象及处理器拦截器(如果有则生成)一并返回给DispatcherServlet。 Dispatch...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"springMVC\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-14T07:00:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XK\\",\\"url\\":\\"https://xk1009.github.io/Xblog\\",\\"email\\":\\"564293991@qq.com\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/Xblog/programming/framework/springMVC.html"}],["meta",{"property":"og:site_name","content":"树下打盹儿"}],["meta",{"property":"og:title","content":"springMVC"}],["meta",{"property":"og:description","content":"springMVC执行流程 用户发送请求至前端控制器DispatcherServlet。 DispatcherServlet收到请求调用HandlerMapping处理器映射器。 处理器映射器找到具体的处理器(可以根据xml配置、注解进行查找)，生成处理器对象及处理器拦截器(如果有则生成)一并返回给DispatcherServlet。 Dispatch..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-14T07:00:52.000Z"}],["meta",{"property":"article:tag","content":"spring"}],["meta",{"property":"article:tag","content":"基础"}],["meta",{"property":"article:tag","content":"记录"}],["meta",{"property":"article:tag","content":"笔记"}],["meta",{"property":"article:tag","content":"foundation"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:modified_time","content":"2025-07-14T07:00:52.000Z"}]]},"git":{"createdTime":1752476452000,"updatedTime":1752476452000,"contributors":[{"name":"xk","username":"xk","email":"564293991@qq.com","commits":1,"url":"https://github.com/xk"}]},"readingTime":{"minutes":0.85,"words":255},"filePathRelative":"programming/framework/springMVC.md","excerpt":"<h2>springMVC执行流程</h2>\\n<ol>\\n<li>用户发送请求至前端控制器DispatcherServlet。</li>\\n<li>DispatcherServlet收到请求调用HandlerMapping处理器映射器。</li>\\n<li>处理器映射器找到具体的处理器(可以根据xml配置、注解进行查找)，生成处理器对象及处理器拦截器(如果有则生成)一并返回给DispatcherServlet。</li>\\n<li>DispatcherServlet调用HandlerAdapter处理器适配器。</li>\\n<li>HandlerAdapter经过适配调用具体的处理器(Controller，也叫后端控制器)。</li>\\n<li>Controller执行完成返回ModelAndView。</li>\\n<li>HandlerAdapter将controller执行结果ModelAndView返回给DispatcherServlet。</li>\\n<li>DispatcherServlet将ModelAndView传给ViewReslover视图解析器。</li>\\n<li>ViewReslover解析后返回具体View.</li>\\n<li>DispatcherServlet根据View进行渲染视图（即将模型数据填充至视图中）。</li>\\n<li>DispatcherServlet响应用户。</li>\\n</ol>","autoDesc":true}')}}]);