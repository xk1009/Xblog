"use strict";(self.webpackChunkx_blog=self.webpackChunkx_blog||[]).push([[2663],{4287:(s,n,a)=>{a.r(n),a.d(n,{comp:()=>p,data:()=>l});var i=a(641);const e={},p=(0,a(6262).A)(e,[["render",function(s,n){return(0,i.uX)(),(0,i.CE)("div",null,n[0]||(n[0]=[(0,i.Fv)('<h2 id="nginx配置文件说明" tabindex="-1"><a class="header-anchor" href="#nginx配置文件说明"><span>nginx配置文件说明</span></a></h2><div class="language-config line-numbers-mode" data-highlighter="shiki" data-ext="config" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-config"><span class="line"><span>#定义Nginx运行的用户和用户组</span></span>\n<span class="line"><span>user www www;</span></span>\n<span class="line"><span>#</span></span>\n<span class="line"><span>#nginx进程数,建议设置为等于CPU总核心数.</span></span>\n<span class="line"><span>worker_processes 8;</span></span>\n<span class="line"><span>#</span></span>\n<span class="line"><span>#全局错误日志定义类型,[ debug | info | notice | warn | error | crit ]</span></span>\n<span class="line"><span>error_log /var/log/nginx/error.log info;</span></span>\n<span class="line"><span>#</span></span>\n<span class="line"><span>#进程文件</span></span>\n<span class="line"><span>pid /var/run/nginx.pid;</span></span>\n<span class="line"><span>#</span></span>\n<span class="line"><span>#一个nginx进程打开的最多文件描述符数目,理论值应该是最多打开文件数（系统的值ulimit -n）与nginx进程数相除,但是nginx分配请求并不均匀,所以建议与ulimit -n的值保持一致.</span></span>\n<span class="line"><span>worker_rlimit_nofile 65535;</span></span>\n<span class="line"><span>#</span></span>\n<span class="line"><span>#工作模式与连接数上限</span></span>\n<span class="line"><span>events</span></span>\n<span class="line"><span>{</span></span>\n<span class="line"><span>    #参考事件模型,use [ kqueue | rtsig | epoll | /dev/poll | select | poll ]; epoll模型是Linux 2.6以上版本内核中的高性能网络I/O模型,如果跑在FreeBSD上面,就用kqueue模型.</span></span>\n<span class="line"><span>    use epoll;</span></span>\n<span class="line"><span>    #单个进程最大连接数（最大连接数=连接数*进程数）</span></span>\n<span class="line"><span>    worker_connections 65535;</span></span>\n<span class="line"><span>}</span></span>\n<span class="line"><span>#</span></span>\n<span class="line"><span>#设定http服务器</span></span>\n<span class="line"><span>http</span></span>\n<span class="line"><span>{</span></span>\n<span class="line"><span>    include mime.types; #文件扩展名与文件类型映射表</span></span>\n<span class="line"><span>    default_type application/octet-stream; #默认文件类型</span></span>\n<span class="line"><span>    #charset utf-8; #默认编码</span></span>\n<span class="line"><span>    server_names_hash_bucket_size 128; #服务器名字的hash表大小</span></span>\n<span class="line"><span>    client_header_buffer_size 32k; #上传文件大小限制</span></span>\n<span class="line"><span>    large_client_header_buffers 4 64k; #设定请求缓</span></span>\n<span class="line"><span>    client_max_body_size 8m; #设定请求缓</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>    # 开启目录列表访问,合适下载服务器,默认关闭.</span></span>\n<span class="line"><span>    autoindex on; # 显示目录</span></span>\n<span class="line"><span>    autoindex_exact_size on; # 显示文件大小 默认为on,显示出文件的确切大小,单位是bytes 改为off后,显示出文件的大概大小,单位是kB或者MB或者GB</span></span>\n<span class="line"><span>    autoindex_localtime on; # 显示文件时间 默认为off,显示的文件时间为GMT时间 改为on后,显示的文件时间为文件的服务器时间</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>    sendfile on; # 开启高效文件传输模式,sendfile指令指定nginx是否调用sendfile函数来输出文件,对于普通应用设为 on,如果用来进行下载等应用磁盘IO重负载应用,可设置为off,以平衡磁盘与网络I/O处理速度,降低系统的负载.注意：如果图片显示不正常把这个改成off.</span></span>\n<span class="line"><span>    tcp_nopush on; # 防止网络阻塞</span></span>\n<span class="line"><span>    tcp_nodelay on; # 防止网络阻塞</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>    keepalive_timeout 120; # (单位s)设置客户端连接保持活动的超时时间,在超过这个时间后服务器会关闭该链接</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>    # FastCGI相关参数是为了改善网站的性能：减少资源占用,提高访问速度.下面参数看字面意思都能理解.</span></span>\n<span class="line"><span>    fastcgi_connect_timeout 300;</span></span>\n<span class="line"><span>    fastcgi_send_timeout 300;</span></span>\n<span class="line"><span>    fastcgi_read_timeout 300;</span></span>\n<span class="line"><span>    fastcgi_buffer_size 64k;</span></span>\n<span class="line"><span>    fastcgi_buffers 4 64k;</span></span>\n<span class="line"><span>    fastcgi_busy_buffers_size 128k;</span></span>\n<span class="line"><span>    fastcgi_temp_file_write_size 128k;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>    # gzip模块设置</span></span>\n<span class="line"><span>    gzip on; #开启gzip压缩输出</span></span>\n<span class="line"><span>    gzip_min_length 1k; #允许压缩的页面的最小字节数,页面字节数从header偷得content-length中获取.默认是0,不管页面多大都进行压缩.建议设置成大于1k的字节数,小于1k可能会越压越大</span></span>\n<span class="line"><span>    gzip_buffers 4 16k; #表示申请4个单位为16k的内存作为压缩结果流缓存,默认值是申请与原始数据大小相同的内存空间来存储gzip压缩结果</span></span>\n<span class="line"><span>    gzip_http_version 1.1; #压缩版本（默认1.1,目前大部分浏览器已经支持gzip解压.前端如果是squid2.5请使用1.0）</span></span>\n<span class="line"><span>    gzip_comp_level 2; #压缩等级.1压缩比最小,处理速度快.9压缩比最大,比较消耗cpu资源,处理速度最慢,但是因为压缩比最大,所以包最小,传输速度快</span></span>\n<span class="line"><span>    gzip_types text/plain application/x-javascript text/css application/xml;</span></span>\n<span class="line"><span>    #压缩类型,默认就已经包含text/html,所以下面就不用再写了,写上去也不会有问题,但是会有一个warn.</span></span>\n<span class="line"><span>    gzip_vary on;#选项可以让前端的缓存服务器缓存经过gzip压缩的页面.例如:用squid缓存经过nginx压缩的数据</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>    #开启限制IP连接数的时候需要使用</span></span>\n<span class="line"><span>    #limit_zone crawler $binary_remote_addr 10m;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>    ##upstream的负载均衡,四种调度算法(下例主讲)##</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>    #虚拟主机的配置</span></span>\n<span class="line"><span>    server</span></span>\n<span class="line"><span>    {</span></span>\n<span class="line"><span>        # 监听端口</span></span>\n<span class="line"><span>        listen 80;</span></span>\n<span class="line"><span>        # 域名可以有多个,用空格隔开</span></span>\n<span class="line"><span>        server_name ably.com;</span></span>\n<span class="line"><span>        # HTTP 自动跳转 HTTPS</span></span>\n<span class="line"><span>        rewrite ^(.*) https://$server_name$1 permanent;</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>    server</span></span>\n<span class="line"><span>    {</span></span>\n<span class="line"><span>        # 监听端口 HTTPS</span></span>\n<span class="line"><span>        listen 443 ssl;</span></span>\n<span class="line"><span>        server_name ably.com;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>        # 配置域名证书</span></span>\n<span class="line"><span>        ssl_certificate      C:\\WebServer\\Certs\\certificate.crt;</span></span>\n<span class="line"><span>        ssl_certificate_key  C:\\WebServer\\Certs\\private.key;</span></span>\n<span class="line"><span>        ssl_session_cache    shared:SSL:1m;</span></span>\n<span class="line"><span>        ssl_session_timeout  5m;</span></span>\n<span class="line"><span>        ssl_protocols SSLv2 SSLv3 TLSv1;</span></span>\n<span class="line"><span>        ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;</span></span>\n<span class="line"><span>        ssl_prefer_server_ciphers  on;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>        index index.html index.htm index.php;</span></span>\n<span class="line"><span>        root /data/www/;</span></span>\n<span class="line"><span>        location ~ .*\\.(php|php5)?$</span></span>\n<span class="line"><span>        {</span></span>\n<span class="line"><span>            fastcgi_pass 127.0.0.1:9000;</span></span>\n<span class="line"><span>            fastcgi_index index.php;</span></span>\n<span class="line"><span>            include fastcgi.conf;</span></span>\n<span class="line"><span>        }</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>        # 配置地址拦截转发，解决跨域验证问题</span></span>\n<span class="line"><span>        location /oauth/{</span></span>\n<span class="line"><span>            proxy_pass https://localhost:13580/oauth/;</span></span>\n<span class="line"><span>            proxy_set_header HOST $host;</span></span>\n<span class="line"><span>            proxy_set_header X-Real-IP $remote_addr;</span></span>\n<span class="line"><span>            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>\n<span class="line"><span>        }</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>        # 图片缓存时间设置</span></span>\n<span class="line"><span>        location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf)$ {</span></span>\n<span class="line"><span>            expires 10d;</span></span>\n<span class="line"><span>        }</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>        # JS和CSS缓存时间设置</span></span>\n<span class="line"><span>        location ~ .*\\.(js|css)?$ {</span></span>\n<span class="line"><span>            expires 1h;</span></span>\n<span class="line"><span>        }</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>        # 日志格式设定</span></span>\n<span class="line"><span>        log_format access &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;</span></span>\n<span class="line"><span>        &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;</span></span>\n<span class="line"><span>        &#39;&quot;$http_user_agent&quot; $http_x_forwarded_for&#39;;</span></span>\n<span class="line"><span>        # 定义本虚拟主机的访问日志</span></span>\n<span class="line"><span>        access_log /var/log/nginx/access.log access;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>        # 设定查看Nginx状态的地址.StubStatus模块能够获取Nginx自上次启动以来的工作状态，此模块非核心模块，需要在Nginx编译安装时手工指定才能使用</span></span>\n<span class="line"><span>        location /NginxStatus {</span></span>\n<span class="line"><span>            stub_status on;</span></span>\n<span class="line"><span>            access_log on;</span></span>\n<span class="line"><span>            auth_basic &quot;NginxStatus&quot;;</span></span>\n<span class="line"><span>            auth_basic_user_file conf/htpasswd;</span></span>\n<span class="line"><span>            #htpasswd文件的内容可以用apache提供的htpasswd工具来产生.</span></span>\n<span class="line"><span>        }</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="nignx配置压缩包-提高页面响应速度" tabindex="-1"><a class="header-anchor" href="#nignx配置压缩包-提高页面响应速度"><span>nignx配置压缩包，提高页面响应速度</span></a></h2><div class="language-config line-numbers-mode" data-highlighter="shiki" data-ext="config" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-config"><span class="line"><span>#开关</span></span>\n<span class="line"><span>    gzip  on;\t</span></span>\n<span class="line"><span>#最小长度 一般不改\t\t\t</span></span>\n<span class="line"><span>\tgzip_min_length 1k;</span></span>\n<span class="line"><span>#设置系统获取几个单位的缓存用于存储gzip的压缩结果数据流。\t</span></span>\n<span class="line"><span>\tgzip_buffers 4 16k;</span></span>\n<span class="line"><span>#识别http的协议版本 默认1.1</span></span>\n<span class="line"><span>\t#gzip_http_version 1.0;</span></span>\n<span class="line"><span>#压缩比，1压缩比最小速度最快，9压缩比最大速度最慢</span></span>\n<span class="line"><span>\tgzip_comp_level 1;</span></span>\n<span class="line"><span>#匹配MIME类型进行压缩</span></span>\n<span class="line"><span>   \t gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;</span></span>\n<span class="line"><span>#根据请求头上的accept-encoding：gzip 返回是否压缩</span></span>\n<span class="line"><span>\tgzip_vary on;</span></span>\n<span class="line"><span>#不适配IE6以前的版本</span></span>\n<span class="line"><span>\tgzip_disable &quot;MSIE [1-6]\\.&quot;;</span></span>\n<span class="line"><span>Nginx做为反向代理的时候启用：</span></span>\n<span class="line"><span>off – 关闭所有的代理结果数据压缩</span></span>\n<span class="line"><span>expired – 如果header中包含”Expires”头信息，启用压缩</span></span>\n<span class="line"><span>no-cache – 如果header中包含”Cache-Control:no-cache”头信息，启用压缩</span></span>\n<span class="line"><span>no-store – 如果header中包含”Cache-Control:no-store”头信息，启用压缩</span></span>\n<span class="line"><span>private – 如果header中包含”Cache-Control:private”头信息，启用压缩</span></span>\n<span class="line"><span>no_last_modified – 启用压缩，如果header中包含”Last_Modified”头信息，启用压缩</span></span>\n<span class="line"><span>no_etag – 启用压缩，如果header中包含“ETag”头信息，启用压缩</span></span>\n<span class="line"><span>auth – 启用压缩，如果header中包含“Authorization”头信息，启用压缩</span></span>\n<span class="line"><span>any – 无条件压缩所有结果数据</span></span>\n<span class="line"><span>\tgzip_proxied any;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常用" tabindex="-1"><a class="header-anchor" href="#常用"><span>常用</span></a></h2>',5)]))}]]),l=JSON.parse('{"path":"/om/nignx.html","title":"nginx","lang":"zh-CN","frontmatter":{"icon":"chart-line","category":["nginx","O&M"],"tag":["nginx","笔记","记录"],"title":"nginx","star":true,"pageview":true,"description":"nginx配置文件说明 nignx配置压缩包，提高页面响应速度 常用","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"nginx\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-11T08:27:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XK\\",\\"url\\":\\"https://xk1009.github.io/Xblog\\",\\"email\\":\\"564293991@qq.com\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/Xblog/om/nignx.html"}],["meta",{"property":"og:site_name","content":"树下打盹儿"}],["meta",{"property":"og:title","content":"nginx"}],["meta",{"property":"og:description","content":"nginx配置文件说明 nignx配置压缩包，提高页面响应速度 常用"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-11T08:27:46.000Z"}],["meta",{"property":"article:tag","content":"记录"}],["meta",{"property":"article:tag","content":"笔记"}],["meta",{"property":"article:tag","content":"nginx"}],["meta",{"property":"article:modified_time","content":"2025-07-11T08:27:46.000Z"}]]},"git":{"createdTime":1752222466000,"updatedTime":1752222466000,"contributors":[{"name":"xk","username":"xk","email":"564293991@qq.com","commits":1,"url":"https://github.com/xk"}]},"readingTime":{"minutes":5.35,"words":1605},"filePathRelative":"om/nignx.md","excerpt":"<h2>nginx配置文件说明</h2>\\n<div class=\\"language-config line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"config\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-config\\"><span class=\\"line\\"><span>#定义Nginx运行的用户和用户组</span></span>\\n<span class=\\"line\\"><span>user www www;</span></span>\\n<span class=\\"line\\"><span>#</span></span>\\n<span class=\\"line\\"><span>#nginx进程数,建议设置为等于CPU总核心数.</span></span>\\n<span class=\\"line\\"><span>worker_processes 8;</span></span>\\n<span class=\\"line\\"><span>#</span></span>\\n<span class=\\"line\\"><span>#全局错误日志定义类型,[ debug | info | notice | warn | error | crit ]</span></span>\\n<span class=\\"line\\"><span>error_log /var/log/nginx/error.log info;</span></span>\\n<span class=\\"line\\"><span>#</span></span>\\n<span class=\\"line\\"><span>#进程文件</span></span>\\n<span class=\\"line\\"><span>pid /var/run/nginx.pid;</span></span>\\n<span class=\\"line\\"><span>#</span></span>\\n<span class=\\"line\\"><span>#一个nginx进程打开的最多文件描述符数目,理论值应该是最多打开文件数（系统的值ulimit -n）与nginx进程数相除,但是nginx分配请求并不均匀,所以建议与ulimit -n的值保持一致.</span></span>\\n<span class=\\"line\\"><span>worker_rlimit_nofile 65535;</span></span>\\n<span class=\\"line\\"><span>#</span></span>\\n<span class=\\"line\\"><span>#工作模式与连接数上限</span></span>\\n<span class=\\"line\\"><span>events</span></span>\\n<span class=\\"line\\"><span>{</span></span>\\n<span class=\\"line\\"><span>    #参考事件模型,use [ kqueue | rtsig | epoll | /dev/poll | select | poll ]; epoll模型是Linux 2.6以上版本内核中的高性能网络I/O模型,如果跑在FreeBSD上面,就用kqueue模型.</span></span>\\n<span class=\\"line\\"><span>    use epoll;</span></span>\\n<span class=\\"line\\"><span>    #单个进程最大连接数（最大连接数=连接数*进程数）</span></span>\\n<span class=\\"line\\"><span>    worker_connections 65535;</span></span>\\n<span class=\\"line\\"><span>}</span></span>\\n<span class=\\"line\\"><span>#</span></span>\\n<span class=\\"line\\"><span>#设定http服务器</span></span>\\n<span class=\\"line\\"><span>http</span></span>\\n<span class=\\"line\\"><span>{</span></span>\\n<span class=\\"line\\"><span>    include mime.types; #文件扩展名与文件类型映射表</span></span>\\n<span class=\\"line\\"><span>    default_type application/octet-stream; #默认文件类型</span></span>\\n<span class=\\"line\\"><span>    #charset utf-8; #默认编码</span></span>\\n<span class=\\"line\\"><span>    server_names_hash_bucket_size 128; #服务器名字的hash表大小</span></span>\\n<span class=\\"line\\"><span>    client_header_buffer_size 32k; #上传文件大小限制</span></span>\\n<span class=\\"line\\"><span>    large_client_header_buffers 4 64k; #设定请求缓</span></span>\\n<span class=\\"line\\"><span>    client_max_body_size 8m; #设定请求缓</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>    # 开启目录列表访问,合适下载服务器,默认关闭.</span></span>\\n<span class=\\"line\\"><span>    autoindex on; # 显示目录</span></span>\\n<span class=\\"line\\"><span>    autoindex_exact_size on; # 显示文件大小 默认为on,显示出文件的确切大小,单位是bytes 改为off后,显示出文件的大概大小,单位是kB或者MB或者GB</span></span>\\n<span class=\\"line\\"><span>    autoindex_localtime on; # 显示文件时间 默认为off,显示的文件时间为GMT时间 改为on后,显示的文件时间为文件的服务器时间</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>    sendfile on; # 开启高效文件传输模式,sendfile指令指定nginx是否调用sendfile函数来输出文件,对于普通应用设为 on,如果用来进行下载等应用磁盘IO重负载应用,可设置为off,以平衡磁盘与网络I/O处理速度,降低系统的负载.注意：如果图片显示不正常把这个改成off.</span></span>\\n<span class=\\"line\\"><span>    tcp_nopush on; # 防止网络阻塞</span></span>\\n<span class=\\"line\\"><span>    tcp_nodelay on; # 防止网络阻塞</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>    keepalive_timeout 120; # (单位s)设置客户端连接保持活动的超时时间,在超过这个时间后服务器会关闭该链接</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>    # FastCGI相关参数是为了改善网站的性能：减少资源占用,提高访问速度.下面参数看字面意思都能理解.</span></span>\\n<span class=\\"line\\"><span>    fastcgi_connect_timeout 300;</span></span>\\n<span class=\\"line\\"><span>    fastcgi_send_timeout 300;</span></span>\\n<span class=\\"line\\"><span>    fastcgi_read_timeout 300;</span></span>\\n<span class=\\"line\\"><span>    fastcgi_buffer_size 64k;</span></span>\\n<span class=\\"line\\"><span>    fastcgi_buffers 4 64k;</span></span>\\n<span class=\\"line\\"><span>    fastcgi_busy_buffers_size 128k;</span></span>\\n<span class=\\"line\\"><span>    fastcgi_temp_file_write_size 128k;</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>    # gzip模块设置</span></span>\\n<span class=\\"line\\"><span>    gzip on; #开启gzip压缩输出</span></span>\\n<span class=\\"line\\"><span>    gzip_min_length 1k; #允许压缩的页面的最小字节数,页面字节数从header偷得content-length中获取.默认是0,不管页面多大都进行压缩.建议设置成大于1k的字节数,小于1k可能会越压越大</span></span>\\n<span class=\\"line\\"><span>    gzip_buffers 4 16k; #表示申请4个单位为16k的内存作为压缩结果流缓存,默认值是申请与原始数据大小相同的内存空间来存储gzip压缩结果</span></span>\\n<span class=\\"line\\"><span>    gzip_http_version 1.1; #压缩版本（默认1.1,目前大部分浏览器已经支持gzip解压.前端如果是squid2.5请使用1.0）</span></span>\\n<span class=\\"line\\"><span>    gzip_comp_level 2; #压缩等级.1压缩比最小,处理速度快.9压缩比最大,比较消耗cpu资源,处理速度最慢,但是因为压缩比最大,所以包最小,传输速度快</span></span>\\n<span class=\\"line\\"><span>    gzip_types text/plain application/x-javascript text/css application/xml;</span></span>\\n<span class=\\"line\\"><span>    #压缩类型,默认就已经包含text/html,所以下面就不用再写了,写上去也不会有问题,但是会有一个warn.</span></span>\\n<span class=\\"line\\"><span>    gzip_vary on;#选项可以让前端的缓存服务器缓存经过gzip压缩的页面.例如:用squid缓存经过nginx压缩的数据</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>    #开启限制IP连接数的时候需要使用</span></span>\\n<span class=\\"line\\"><span>    #limit_zone crawler $binary_remote_addr 10m;</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>    ##upstream的负载均衡,四种调度算法(下例主讲)##</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>    #虚拟主机的配置</span></span>\\n<span class=\\"line\\"><span>    server</span></span>\\n<span class=\\"line\\"><span>    {</span></span>\\n<span class=\\"line\\"><span>        # 监听端口</span></span>\\n<span class=\\"line\\"><span>        listen 80;</span></span>\\n<span class=\\"line\\"><span>        # 域名可以有多个,用空格隔开</span></span>\\n<span class=\\"line\\"><span>        server_name ably.com;</span></span>\\n<span class=\\"line\\"><span>        # HTTP 自动跳转 HTTPS</span></span>\\n<span class=\\"line\\"><span>        rewrite ^(.*) https://$server_name$1 permanent;</span></span>\\n<span class=\\"line\\"><span>    }</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>    server</span></span>\\n<span class=\\"line\\"><span>    {</span></span>\\n<span class=\\"line\\"><span>        # 监听端口 HTTPS</span></span>\\n<span class=\\"line\\"><span>        listen 443 ssl;</span></span>\\n<span class=\\"line\\"><span>        server_name ably.com;</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>        # 配置域名证书</span></span>\\n<span class=\\"line\\"><span>        ssl_certificate      C:\\\\WebServer\\\\Certs\\\\certificate.crt;</span></span>\\n<span class=\\"line\\"><span>        ssl_certificate_key  C:\\\\WebServer\\\\Certs\\\\private.key;</span></span>\\n<span class=\\"line\\"><span>        ssl_session_cache    shared:SSL:1m;</span></span>\\n<span class=\\"line\\"><span>        ssl_session_timeout  5m;</span></span>\\n<span class=\\"line\\"><span>        ssl_protocols SSLv2 SSLv3 TLSv1;</span></span>\\n<span class=\\"line\\"><span>        ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;</span></span>\\n<span class=\\"line\\"><span>        ssl_prefer_server_ciphers  on;</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>        index index.html index.htm index.php;</span></span>\\n<span class=\\"line\\"><span>        root /data/www/;</span></span>\\n<span class=\\"line\\"><span>        location ~ .*\\\\.(php|php5)?$</span></span>\\n<span class=\\"line\\"><span>        {</span></span>\\n<span class=\\"line\\"><span>            fastcgi_pass 127.0.0.1:9000;</span></span>\\n<span class=\\"line\\"><span>            fastcgi_index index.php;</span></span>\\n<span class=\\"line\\"><span>            include fastcgi.conf;</span></span>\\n<span class=\\"line\\"><span>        }</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>        # 配置地址拦截转发，解决跨域验证问题</span></span>\\n<span class=\\"line\\"><span>        location /oauth/{</span></span>\\n<span class=\\"line\\"><span>            proxy_pass https://localhost:13580/oauth/;</span></span>\\n<span class=\\"line\\"><span>            proxy_set_header HOST $host;</span></span>\\n<span class=\\"line\\"><span>            proxy_set_header X-Real-IP $remote_addr;</span></span>\\n<span class=\\"line\\"><span>            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>\\n<span class=\\"line\\"><span>        }</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>        # 图片缓存时间设置</span></span>\\n<span class=\\"line\\"><span>        location ~ .*\\\\.(gif|jpg|jpeg|png|bmp|swf)$ {</span></span>\\n<span class=\\"line\\"><span>            expires 10d;</span></span>\\n<span class=\\"line\\"><span>        }</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>        # JS和CSS缓存时间设置</span></span>\\n<span class=\\"line\\"><span>        location ~ .*\\\\.(js|css)?$ {</span></span>\\n<span class=\\"line\\"><span>            expires 1h;</span></span>\\n<span class=\\"line\\"><span>        }</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>        # 日志格式设定</span></span>\\n<span class=\\"line\\"><span>        log_format access \'$remote_addr - $remote_user [$time_local] \\"$request\\" \'</span></span>\\n<span class=\\"line\\"><span>        \'$status $body_bytes_sent \\"$http_referer\\" \'</span></span>\\n<span class=\\"line\\"><span>        \'\\"$http_user_agent\\" $http_x_forwarded_for\';</span></span>\\n<span class=\\"line\\"><span>        # 定义本虚拟主机的访问日志</span></span>\\n<span class=\\"line\\"><span>        access_log /var/log/nginx/access.log access;</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>        # 设定查看Nginx状态的地址.StubStatus模块能够获取Nginx自上次启动以来的工作状态，此模块非核心模块，需要在Nginx编译安装时手工指定才能使用</span></span>\\n<span class=\\"line\\"><span>        location /NginxStatus {</span></span>\\n<span class=\\"line\\"><span>            stub_status on;</span></span>\\n<span class=\\"line\\"><span>            access_log on;</span></span>\\n<span class=\\"line\\"><span>            auth_basic \\"NginxStatus\\";</span></span>\\n<span class=\\"line\\"><span>            auth_basic_user_file conf/htpasswd;</span></span>\\n<span class=\\"line\\"><span>            #htpasswd文件的内容可以用apache提供的htpasswd工具来产生.</span></span>\\n<span class=\\"line\\"><span>        }</span></span>\\n<span class=\\"line\\"><span>    }</span></span>\\n<span class=\\"line\\"><span>}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}')},6262:(s,n)=>{n.A=(s,n)=>{const a=s.__vccOpts||s;for(const[s,i]of n)a[s]=i;return a}}}]);